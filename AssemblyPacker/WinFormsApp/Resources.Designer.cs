//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Twidlle.AssemblyPacker.WinFormsApp {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Twidlle.AssemblyPacker.WinFormsApp.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon ApplicationIcon {
            get {
                object obj = ResourceManager.GetObject("ApplicationIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .Net Application Packer.
        /// </summary>
        public static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string AssemblyNameContainsIllegalChara {
            get {
                return ResourceManager.GetString("AssemblyNameContainsIllegalChara", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose destination directory..
        /// </summary>
        public static string BrowseDestDir {
            get {
                return ResourceManager.GetString("BrowseDestDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose input directory.
        /// </summary>
        public static string BrowseForInputFolderTitle {
            get {
                return ResourceManager.GetString("BrowseForInputFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose ouput directory.
        /// </summary>
        public static string BrowseForOutputFolderTitle {
            get {
                return ResourceManager.GetString("BrowseForOutputFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose source application directory..
        /// </summary>
        public static string BrowseSourceDir {
            get {
                return ResourceManager.GetString("BrowseSourceDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation error: {0}.
        /// </summary>
        public static string CompilationError {
            get {
                return ResourceManager.GetString("CompilationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; does not exists. Create it?.
        /// </summary>
        public static string DirectoryDoesNotExistsMessageFormat {
            get {
                return ResourceManager.GetString("DirectoryDoesNotExistsMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory root does not exist..
        /// </summary>
        public static string DirectoryRootDoesNotExist {
            get {
                return ResourceManager.GetString("DirectoryRootDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packed assembly name can&apos;t be empty.
        /// </summary>
        public static string EmptyAssemblyName {
            get {
                return ResourceManager.GetString("EmptyAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory name can&apos;t be empty.
        /// </summary>
        public static string EmptyDirectoryName {
            get {
                return ResourceManager.GetString("EmptyDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ErrorMessage {
            get {
                return ResourceManager.GetString("ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .Net Assembly Packer Error.
        /// </summary>
        public static string ExceptionDialogCaption {
            get {
                return ResourceManager.GetString("ExceptionDialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected application error:
        ///
        ///{0}
        ///
        ///Clipboard contains details of error..
        /// </summary>
        public static string ExceptionDialogMessageFormat {
            get {
                return ResourceManager.GetString("ExceptionDialogMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon folder1 {
            get {
                object obj = ResourceManager.GetObject("folder1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.twidlle.com/AssemblyPacker/index.html.
        /// </summary>
        public static string HelpUrl {
            get {
                return ResourceManager.GetString("HelpUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal name of packed assembly: &apos;{0}&apos;. 
        ///Choose another assembly name..
        /// </summary>
        public static string IllegalAssemblyName {
            get {
                return ResourceManager.GetString("IllegalAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input directory not found..
        /// </summary>
        public static string InputDirectoryNotFound {
            get {
                return ResourceManager.GetString("InputDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input directory name. 
        ///{0}.
        /// </summary>
        public static string InvalidInputDirectoryName {
            get {
                return ResourceManager.GetString("InvalidInputDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid output directory name. 
        ///{0}.
        /// </summary>
        public static string InvalidOutputDirectoryName {
            get {
                return ResourceManager.GetString("InvalidOutputDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple application within input directory &apos;{0}&apos;.
        ///Input directory can contain single executable file only..
        /// </summary>
        public static string MultipleApplicationInDirectory {
            get {
                return ResourceManager.GetString("MultipleApplicationInDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input directory contains multiple excutable files. .
        /// </summary>
        public static string MultipleExcutableFiles {
            get {
                return ResourceManager.GetString("MultipleExcutableFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application successfully packed..
        /// </summary>
        public static string PackagingSuccess {
            get {
                return ResourceManager.GetString("PackagingSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relative directory name &apos;{0}&apos; is not allowed..
        /// </summary>
        public static string RelativeDirectoryName {
            get {
                return ResourceManager.GetString("RelativeDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        public static string VersionFormat {
            get {
                return ResourceManager.GetString("VersionFormat", resourceCulture);
            }
        }
    }
}
